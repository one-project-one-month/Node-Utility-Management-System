generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentMethod {
  Cash
  Mobile_Banking
}

enum InvoiceStatus {
  Overdue
  Paid
  Pending
}

enum Category {
  Complain
  Maintenance
  Other
}

enum ServiceStatus {
  Pending
  Ongoing
  Resolved
}

enum PriorityLevel {
  Low
  Medium
  High
}

enum RoomStatus {
  Available
  Rented
  Purchased
  InMaintenance
}

enum UserRole {
  Tenant
  Admin
  Staff
}

model User {
  id            String   @id @default(uuid())
  user_name     String
  email         String   @unique
  password      String
  role          UserRole
  refresh_token String?
  is_active     Boolean  @default(true) // To check with laravel team
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // relations
  tenant    Tenant? @relation(fields: [tenant_id], references: [id])
  tenant_id String? @unique

  @@map("users")
}

model Tenant {
  id            String   @id @default(uuid())
  names         String[]
  emails        String[]
  nrcs          String[]
  phone_nos     String[]
  emergency_nos String[]
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // relations
  room_id String @unique
  room    Room   @relation(fields: [room_id], references: [id])
  user    User?
  contracts Contract? // added here

  @@map("tenants")
}

model Room {
  id               String     @id @default(uuid())
  room_no          Int        @unique
  floor            Int // To check with laravel team
  dimension        String
  no_of_bed_room   Int
  status           RoomStatus @default(Available)
  selling_price    Decimal?
  max_no_of_people Int
  description      String?
  created_at       DateTime   @default(now())
  updated_at       DateTime   @updatedAt

  // relations
  contract         Contract[]
  tenant           Tenant?
  customer_service CustomerService[]
  bill             Bill?

  @@map("rooms")
}

model Contract {
  id           String   @id @default(uuid())
  expiry_date  DateTime
  created_date DateTime
  updated_date DateTime

  // relations
  room_id       String       @unique
  room          Room         @relation(fields: [room_id], references: [id])
  tenant_id        String    @unique // added tenant relation (for now, 1 to 1)
  tenant           Tenant        @relation(fields: [tenant_id], references: [id])    
  contract_type_id  String   // edited (typo) contract_id -> contract_type_id
  contract_type ContractType @relation(fields: [contract_type_id], references: [id]) // edited (typo)

  @@map("contracts")
}

model ContractType {
  id         String   @id @default(uuid())
  name       String // 6 months, 12 months
  duration   Int
  price      Decimal
  facilities String[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  contract Contract[]

  @@map("contract_types")
}

model CustomerService {
  id             String        @id @default(uuid())
  description    String
  category       Category
  status         ServiceStatus
  priority_level PriorityLevel
  issued_date     DateTime      @default(now()) // edited part (typo) issue -> issued
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt

  room    Room   @relation(fields: [room_id], references: [id])
  room_id String

  @@map("customer_services")
}

model Bill {
  id              String   @id @default(uuid())
  rental_fee      Decimal
  electricity_fee Decimal
  water_fee       Decimal
  fine_fee        Decimal?
  service_fee     Decimal
  ground_fee      Decimal
  car_parking_fee Decimal?
  wifi_fee        Decimal?
  total_amount    Decimal
  due_date        DateTime
  created_at      DateTime
  updated_at      DateTime

  //relations
  room       Room        @relation(fields: [room_id], references: [id])
  room_id    String      @unique
  total_unit TotalUnits?
  invoice    Invoice?

  @@map("bills")
}

model TotalUnits {
  id                String  @id @default(uuid())
  electricity_units Decimal
  water_units       Decimal
  // created_at        Decimal
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  // relations
  bill    Bill   @relation(fields: [bill_id], references: [id])
  bill_id String @unique

  @@map("total_units")
}

model Invoice {
  id      String        @id @default(uuid())
  status  InvoiceStatus

  // relations
  bill    Bill          @relation(fields: [bill_id], references: [id])
  bill_id String        @unique
  created_at DateTime   @default(now()) // edited part
  updated_at DateTime   @updatedAt // edited part

  receipt Receipt?

  @@map("invoices")
}

model Receipt {
  id             String        @id @default(uuid())
  payment_method PaymentMethod
  paid_date      DateTime
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt

  //relations
  invoice    Invoice @relation(fields: [invoice_id], references: [id])
  invoice_id String  @unique

  @@map("receipts")
}
