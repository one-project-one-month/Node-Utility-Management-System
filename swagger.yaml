openapi: 3.0.0
info:
  title: REST API DOCS
  version: 1.0.0
  description: API documentation for the Utility Management System

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ApiSuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operation successful
        content:
          nullable: true
        status:
          type: number
          example: 200
    ApiErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Invalid email or password
        status:
          type: number
          example: 401
    AdminUser:
      type: object
      properties:
        id:
          type: string
          example: 974cbaf3-78b9-41f0-b6e9-8a9ddf9682d3
        user_name:
          type: string
          example: admin
        email:
          type: string
          example: admin@gmail.com
        role:
          type: string
          example: Admin
        tenant_id:
          type: string
          nullable: true
          example:
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          example: 2025-09-30T18:05:15.112Z
        updated_at:
          type: string
          example: 2025-10-01T03:25:04.296Z
    TenantUser:
      type: object
      properties:
        id:
          type: string
          example: 974cbaf3-78b9-41f0-b6e9-8a9ddf9682d3
        user_name:
          type: string
          example: tenant1
        email:
          type: string
          example: tenant1@gmail.com
        role:
          type: string
          example: Tenant
        tenant_id:
          type: string
          nullable: true
          example: 8a9ddf9682d3-974cbaf3-78b9-41f0-b6e9
        is_active:
          type: boolean
          example: true
        created_at:
          type: string
          example: 2025-09-30T18:05:15.112Z
        updated_at:
          type: string
          example: 2025-10-01T03:25:04.296Z

paths:
  # Authentication Endpoints
  /api/v1/auth/signin:
    post:
      tags:
        - Authentication
      summary: Sign in a user
      description: Sign in a user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@gmail.com
                password:
                  type: string
                  example: admin123
      responses:
        200:
          description: User signed in successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Sign in successful
                      content:
                        type: object
                        properties:
                          user:
                            $ref: '#/components/schemas/AdminUser'
                          accessToken:
                            type: string
                            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
  /api/v1/auth/signout:
    post:
      tags:
        - Authentication
      summary: Sign out a user
      description: Sign out the currently authenticated user
      security:
        - bearerAuth: []
      responses:
        200:
          description: User signed out successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Sign out successful

        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                # $ref: '#/components/schemas/ApiErrorResponse'
                allOf:
                  - $ref: '#/components/schemas/ApiErrorResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Access token is required
  /api/v1/auth/refresh-token:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Refresh the access token using a valid refresh token stored in a cookie
      parameters:
        - name: refreshToken
          in: cookie
          description: Refresh token stored in HTTP-only cookie
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        200:
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Token refreshed successfully
                      content:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiErrorResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Refresh token is required

  # User Endpoints
  /api/v1/users:
    post:
      tags:
        - Users
      summary: Create a new user (Admin only)
      description: Create a new user. Only accessible by Admin users.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                  example: tenant1
                email:
                  type: string
                  example: tenant1@gmail.com
                password:
                  type: string
                  example: tenant1
                role:
                  type: string
                  enum:
                    - Admin
                    - Tenant
                    - Staff
                  example: Tenant
                tenant_id:
                  type: string
                  nullable: true
                  example:
      responses:
        201:
          description: User created successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiSuccessResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: User created successfully
                      content:
                        type: object
                        properties:
                          user:
                            $ref: '#/components/schemas/TenantUser'
                      status:
                        type: number
                        example: 201
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiErrorResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: User with this email already exists
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiErrorResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: Access token is required
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiErrorResponse'
                  - type: object
                    properties:
                      message:
                        type: string
                        example: You do not have permission to perform this action
